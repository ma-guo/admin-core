package config

import (
	"strconv"

	"github.com/ma-guo/niuhe"
	"github.com/ma-guo/niuhe/db"
)

// 初始化数据库

func initDatabaseData() error {
	lines := []string{
		"INSERT INTO `sys_dept` VALUES (1,'有来技术',0,'0',1,1,0,'2022-04-19 12:46:37',NULL,1,1),(2,'研发部门',1,'0,1',1,1,0,'2022-04-19 12:46:37','2022-04-19 12:46:37',2,2),(3,'测试部门',1,'0,1',1,1,0,'2022-04-19 12:46:37','2022-04-19 12:46:37',2,2);",
		"INSERT INTO `sys_dict` VALUES (1,'gender','男','1',1,1,0,NULL,'2019-05-05 13:07:52','2022-06-12 23:20:39'),(2,'gender','女','2',2,1,0,NULL,'2019-04-19 11:33:00','2019-07-02 14:23:05'),(3,'gender','未知','0',1,1,0,NULL,'2020-10-17 08:09:31','2020-10-17 08:09:31');",
		"INSERT INTO `sys_dict_type` VALUES (1,'性别','gender',1,'定义性别类型','2019-12-06 19:03:32','2024-04-29 18:34:52');",
		"INSERT INTO `sys_menu` VALUES (1,0,'0','系统管理',2,'/system','Layout',NULL,1,1,'system','/system/user','2021-08-28 09:12:21','2021-08-28 09:12:21',NULL,NULL),(2,1,'0,1','用户管理',1,'user','system/user/index','',1,1,'user','','2021-08-28 09:12:21','2024-04-26 11:49:52',0,1),(3,1,'0,1','角色管理',1,'role','system/role/index',NULL,1,2,'role',NULL,'2021-08-28 09:12:21','2021-08-28 09:12:21',NULL,1),(4,1,'0,1','菜单管理',1,'menu','system/menu/index',NULL,1,3,'menu',NULL,'2021-08-28 09:12:21','2021-08-28 09:12:21',NULL,1),(5,1,'0,1','部门管理',1,'dept','system/dept/index',NULL,1,4,'tree',NULL,'2021-08-28 09:12:21','2021-08-28 09:12:21',NULL,1),(6,1,'0,1','字典管理',1,'dict','system/dict/index',NULL,1,5,'dict',NULL,'2021-08-28 09:12:21','2021-08-28 09:12:21',NULL,1),(20,0,'0','多级菜单',2,'/multi-level','Layout',NULL,1,9,'cascader','/multi-level/multi-level1','2022-02-16 23:11:00','2022-02-16 23:11:00',0,NULL),(21,20,'0,20','菜单一级',1,'multi-level1','demo/multi-level/level1',NULL,1,1,'','/multi-level/multi-level2','2022-02-16 23:13:38','2022-02-16 23:13:38',0,1),(22,21,'0,20,21','菜单二级',1,'multi-level2','demo/multi-level/children/level2',NULL,1,1,'','/multi-level/multi-level2/multi-level3-1','2022-02-16 23:14:23','2022-02-16 23:14:23',1,1),(23,22,'0,20,21,22','菜单三级-1',1,'multi-level3-1','demo/multi-level/children/children/level3-1',NULL,1,1,'','','2022-02-16 23:14:51','2022-02-16 23:14:51',0,1),(24,22,'0,20,21,22','菜单三级-2',1,'multi-level3-2','demo/multi-level/children/children/level3-2',NULL,1,2,'','','2022-02-16 23:15:08','2022-02-16 23:15:08',0,1),(26,0,'0','平台文档',2,'/doc','Layout',NULL,1,8,'document','https://juejin.cn/post/7228990409909108793','2022-02-17 22:51:20','2022-02-17 22:51:20',NULL,NULL),(30,26,'0,26','平台文档(外链)',3,'https://juejin.cn/post/7228990409909108793','',NULL,1,2,'link','','2022-02-18 00:01:40','2022-02-18 00:01:40',NULL,NULL),(31,2,'0,1,2','用户新增',4,'',NULL,'sys:user:add',1,1,'','','2022-10-23 11:04:08','2022-10-23 11:04:11',NULL,NULL),(32,2,'0,1,2','用户编辑',4,'',NULL,'sys:user:edit',1,2,'','','2022-10-23 11:04:08','2022-10-23 11:04:11',NULL,NULL),(33,2,'0,1,2','用户删除',4,'',NULL,'sys:user:delete',1,3,'','','2022-10-23 11:04:08','2022-10-23 11:04:11',NULL,NULL),(36,0,'0','组件封装',2,'/component','Layout',NULL,1,10,'menu','','2022-10-31 09:18:44','2022-10-31 09:18:47',NULL,NULL),(37,36,'0,36','富文本编辑器',1,'wang-editor','demo/wang-editor',NULL,1,1,'','',NULL,NULL,NULL,1),(38,36,'0,36','图片上传',1,'upload','demo/upload',NULL,1,2,'','','2022-11-20 23:16:30','2022-11-20 23:16:32',NULL,1),(39,36,'0,36','图标选择器',1,'icon-selector','demo/icon-selector',NULL,1,3,'','','2022-11-20 23:16:30','2022-11-20 23:16:32',NULL,1),(40,0,'0','接口文档',2,'/api','Layout',NULL,1,7,'api','','2022-02-17 22:51:20','2022-02-17 22:51:20',1,NULL),(41,40,'0,40','Apifox',1,'apifox','demo/api/apifox',NULL,1,1,'api','','2022-02-17 22:51:20','2022-02-17 22:51:20',NULL,1),(70,3,'0,1,3','角色新增',4,'',NULL,'sys:role:add',1,1,'',NULL,'2023-05-20 23:39:09','2023-05-20 23:39:09',NULL,NULL),(71,3,'0,1,3','角色编辑',4,'',NULL,'sys:role:edit',1,2,'',NULL,'2023-05-20 23:40:31','2023-05-20 23:40:31',NULL,NULL),(72,3,'0,1,3','角色删除',4,'',NULL,'sys:role:delete',1,3,'',NULL,'2023-05-20 23:41:08','2023-05-20 23:41:08',NULL,NULL),(73,4,'0,1,4','菜单新增',4,'',NULL,'sys:menu:add',1,1,'',NULL,'2023-05-20 23:41:35','2023-05-20 23:41:35',NULL,NULL),(74,4,'0,1,4','菜单编辑',4,'',NULL,'sys:menu:edit',1,3,'',NULL,'2023-05-20 23:41:58','2023-05-20 23:41:58',NULL,NULL),(75,4,'0,1,4','菜单删除',4,'',NULL,'sys:menu:delete',1,3,'',NULL,'2023-05-20 23:44:18','2023-05-20 23:44:18',NULL,NULL),(76,5,'0,1,5','部门新增',4,'',NULL,'sys:dept:add',1,1,'',NULL,'2023-05-20 23:45:00','2023-05-20 23:45:00',NULL,NULL),(77,5,'0,1,5','部门编辑',4,'',NULL,'sys:dept:edit',1,2,'',NULL,'2023-05-20 23:46:16','2023-05-20 23:46:16',NULL,NULL),(78,5,'0,1,5','部门删除',4,'',NULL,'sys:dept:delete',1,3,'',NULL,'2023-05-20 23:46:36','2023-05-20 23:46:36',NULL,NULL),(79,6,'0,1,6','字典类型新增',4,'',NULL,'sys:dict_type:add',1,1,'',NULL,'2023-05-21 00:16:06','2023-05-21 00:16:06',NULL,NULL),(81,6,'0,1,6','字典类型编辑',4,'',NULL,'sys:dict_type:edit',1,2,'',NULL,'2023-05-21 00:27:37','2023-05-21 00:27:37',NULL,NULL),(84,6,'0,1,6','字典类型删除',4,'',NULL,'sys:dict_type:delete',1,3,'',NULL,'2023-05-21 00:29:39','2023-05-21 00:29:39',NULL,NULL),(85,6,'0,1,6','字典数据新增',4,'',NULL,'sys:dict:add',1,4,'',NULL,'2023-05-21 00:46:56','2023-05-21 00:47:06',NULL,NULL),(86,6,'0,1,6','字典数据编辑',4,'',NULL,'sys:dict:edit',1,5,'',NULL,'2023-05-21 00:47:36','2023-05-21 00:47:36',NULL,NULL),(87,6,'0,1,6','字典数据删除',4,'',NULL,'sys:dict:delete',1,6,'',NULL,'2023-05-21 00:48:10','2023-05-21 00:48:20',NULL,NULL),(88,2,'0,1,2','重置密码',4,'','','sys:user:password:reset',1,4,'','','2023-05-21 00:49:18','2024-05-06 11:52:36',0,0),(89,0,'0','功能演示',2,'/function','Layout',NULL,1,11,'menu','','2022-10-31 09:18:44','2022-10-31 09:18:47',NULL,NULL),(90,89,'0,89','Websocket',1,'/function/websocket','demo/websocket',NULL,1,3,'','','2022-11-20 23:16:30','2022-11-20 23:16:32',NULL,1),(91,89,'0,89','敬请期待...',2,'other','demo/other','',0,4,'','','2022-11-20 23:16:30','2024-04-29 11:44:02',0,0),(93,36,'0,36','签名',1,'signature','demo/signature',NULL,1,6,'','','2022-11-20 23:16:30','2022-11-20 23:16:32',NULL,1),(94,36,'0,36','表格',1,'table','demo/table',NULL,1,7,'','','2022-11-20 23:16:30','2022-11-20 23:16:32',NULL,1),(95,36,'0,36','字典组件',1,'dict-demo','demo/dict',NULL,1,4,'','','2022-11-20 23:16:30','2022-11-20 23:16:32',NULL,1),(97,89,'0,89','Icons',1,'icon-demo','demo/icons',NULL,1,2,'el-icon-Notification','','2022-11-20 23:16:30','2022-11-20 23:16:32',NULL,1),(102,26,'0,26','平台文档(内嵌)',3,'internal-doc','demo/internal-doc',NULL,1,1,'document','','2022-02-18 00:01:40','2022-02-18 00:01:40',NULL,NULL),(110,1,'0,1','OSS 存储',1,'oss','system/oss/index','',1,6,'el-icon-UploadFilled','','2024-04-30 11:53:11','2024-05-03 20:08:38',0,0),(111,110,'0,1,110','编辑OSS',4,'','','sys:oss:edit',1,1,'','','2024-04-30 11:58:49','2024-04-30 11:58:49',0,0),(112,1,'0,1','文件管理',1,'files','system/files/index','',1,100,'el-icon-Folder','','2024-05-03 20:07:51','2024-05-03 20:08:05',0,0),(113, 36, '0,36', '增删改查', 1, 'curd', 'demo/curd/index', '', 1, 1, 'menu', '', '2024-05-18 15:20:19', '2024-05-18 15:20:19', 0, 0);",
		"INSERT INTO `sys_role` VALUES (1,'超级管理员','ROOT',1,1,0,0,'2021-05-21 14:56:51','2024-04-28 09:57:10'),(2,'系统管理员','ADMIN',2,1,1,0,'2021-03-25 12:39:54',NULL),(3,'访问游客','GUEST',3,1,2,0,'2021-05-26 15:49:05','2019-05-05 16:00:00'),(4,'系统管理员1','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(5,'系统管理员2','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(6,'系统管理员3','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(7,'系统管理员4','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(8,'系统管理员5','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(9,'系统管理员6','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(10,'系统管理员7','ADMIN1',2,1,1,1,'2021-03-25 12:39:54','2024-04-28 16:19:58'),(11,'系统管理员8','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(12,'系统管理员9','ADMIN1',2,1,1,0,'2021-03-25 12:39:54',NULL),(13,'测试2','testtest',10,12,12,1,'2024-04-28 09:34:39','2024-04-28 09:45:48'),(14,'角色测试','s',3,1,2,1,'2024-04-28 09:34:40','2024-04-28 09:45:48'),(15,'角色测试','roletest',3,1,2,1,'2024-04-28 09:34:43','2024-04-28 16:21:58'),(16,'角色测试','roletest',3,1,2,0,'2024-04-28 09:35:36','2024-04-28 09:35:36'),(17,'角色测试','roletest',3,1,2,0,'2024-04-28 09:35:45','2024-04-28 09:35:45');",
		"INSERT INTO `sys_role_menu` VALUES (2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,37),(2,20),(2,21),(2,22),(2,23),(2,24),(2,32),(2,33),(2,39),(2,26),(2,30),(2,31),(2,36),(2,38),(2,39),(2,40),(2,41),(2,1),(2,2),(2,3),(2,4),(2,5),(2,6),(2,20),(2,21),(2,22),(2,23),(2,24),(2,26),(2,30),(2,30),(2,31),(2,32),(2,33),(2,36),(2,37),(2,38),(2,39),(2,40),(2,41),(2,70),(2,71),(2,72),(2,73),(2,74),(2,75),(2,76),(2,77),(2,78),(2,79),(2,81),(2,84),(2,85),(2,86),(2,87),(2,88),(2,89),(2,90),(2,91),(2,93),(2,94),(2,95),(2,97),(2,102),(1,1),(1,2),(1,31),(1,32),(1,33),(1,88),(2,110),(2,111),(2,112),(2, 113);",
		"INSERT INTO `sys_user` VALUES (1,'root','有来技术',1,'$2a$10$xVWsNOhHrCxh5UbpCE7/HuJ.PAOKcYAqRxD2CO2nVnJS.IAXkr5aq',1,'https://oss.youlai.tech/youlai-boot/2023/05/16/811270ef31f548af9cffc026dfc3777b.gif','17621590365',1,'youlaitech@163.com',0,NULL,'2024-05-06 14:28:38'),(2,'admin','系统管理员',1,'$2a$10$xVWsNOhHrCxh5UbpCE7/HuJ.PAOKcYAqRxD2CO2nVnJS.IAXkr5aq',1,'https://oss.youlai.tech/youlai-boot/2023/05/16/811270ef31f548af9cffc026dfc3777b.gif','17621210366',1,'youlaitech@163.com',0,'2019-10-10 13:41:22','2024-04-30 12:00:18'),(3,'test','测试小用户',1,'$2a$10$xVWsNOhHrCxh5UbpCE7/HuJ.PAOKcYAqRxD2CO2nVnJS.IAXkr5aq',3,'https://oss.youlai.tech/youlai-boot/2023/05/16/811270ef31f548af9cffc026dfc3777b.gif','17621210366',1,'youlaitech@163.com',0,'2021-06-05 01:31:29','2024-05-06 14:27:50'),(287,'123','123',1,'$2a$10$mVoBVqm1837huf7kcN0wS.GVYKEFv0arb7GvzfFXoTyqDlcRzT.6i',1,'https://oss.youlai.tech/youlai-boot/2023/05/16/811270ef31f548af9cffc026dfc3777b.gif',NULL,1,'youlaitech@163.com',1,'2023-05-21 14:11:19','2023-05-21 14:11:25'),(288,'testtest','测试',2,'$2a$10$Diky/csT4Fn/gBQFA6wjeO2t/Yqj8zVD7kyi8Mu1ffc7.E8pYMVLG',1,'https://oss.youlai.tech/youlai-boot/2023/05/16/811270ef31f548af9cffc026dfc3777b.gif','17621210366',1,'youlaitech@163.com',1,'2024-04-26 18:58:58','2024-04-28 09:13:19');",
		"INSERT INTO `sys_user_role` VALUES (1,1),(2,2),(3,3),(287,2),(288,1),(288,2),(289,1);",
		"INSERT INTO `sys_menu` (`id`, `parent_id`, `tree_path`, `name`, `type`, `path`, `component`, `perm`, `visible`, `sort`, `icon`, `redirect`, `create_time`, `update_time`, `always_show`, `keep_alive`) VALUES (114, 1, '0,1', 'API权限', 1, 'apiviews', 'system/apiview/index', '', 1, 7, 'api', '', '2024-11-27 12:14:50', '2024-11-27 12:16:17', 0, 1);",
		"INSERT INTO `sys_role_menu` (`role_id`, `menu_id`) VALUES (2, 114);",
		"INSERT INTO `sys_document` (`id`, `name`, `markdown`, `html`, `create_at`, `update_at`, `delete_at`) VALUES (1, 'niuhe 插件官方教程', 'Vscode [niuhe(牛河/河粉)](https://marketplace.visualstudio.com/items?itemName=dequan.niuhe) 插件是一款面向 `golang` 的后端 IDL 代码生成(翻译)插件, 旨在简化前后端开发流程, 提高开发效率. 它通过简单的 [niuhe idl 语法](../chapter2/section3.md) 定义接口, 支持生成对应的 go 服务代码, 前端 api 定义, swagger 文档, 以及其他语言的协议.\n\n[`niuhe IDl`](../chapter2/section3.md) 是一种类似于 Python 的对象接口定义语言（Interface Definition Language, `IDL`），语法简洁，开发者易上手。\n\n插件借助对 `niuhe IDl` 的支持与拓展，开发者只需定义一次接口就能多处复用，避免前后端重复定义，接口更新也无需繁琐通知。此外，插件还能自动生成 [CURD 相关前后端代码](../chapter4/section1.md)，并搭配[管理后台模板](../chapter5/README.md)。\n\nniuhe 插件通过一套接口定义生成多套一致代码，可减少重复劳动，提升开发效率，提升项目的一致性和可维护性，让团队聚焦核心业务，非常适合中小开发团队使用。\n\n## 核心功能\n\n| 功能模块 | 核心能力 | 适用场景 |\n| --- | --- | --- |\n| Go语言支持 | 自动生成服务框架代码：包含路由管理[niuhe](https://github.com/ma-guo/niuhe)、请求参数解析[zpform](https://github.com/ma-guo/zpform)、响应格式处理等基础代码[niuhe](https://github.com/ma-guo/niuhe)。[niuhe](https://github.com/ma-guo/niuhe) 和 [zpform](https://github.com/ma-guo/zpform) 两个库是本插件的基石 | 后端开发 |\n| [TypeScript支持](../chapter3/section3.md) | 一键生成前端API调用代码，支持Web/小程序/React Native等场景 | 前端开发 |\n| [文档生成](../chapter3/section2.md) | 自动生成Swagger文档，支持导入Postman/[Apifox](https://apifox.com/)等测试工具, [接入 MCP](../chapter3/section4.md) 等 | 接口测试 |\n| [多语言协议](../chapter4/section2.md) | 生成标准化协议文件，支持自定义转换到其他编程语言 | 前端开发 |\n\n## Go服务核心特性\n| 功能 | 优势 |\n| --- | --- |\n| 智能路由 | 自动根据文件结构生成路由配置，无需手动维护 |\n| 参数处理 | 内置请求参数校验和响应格式化，专注业务逻辑开发 |\n| [XORM集成](../chapter4/section1.md) | 自动生成数据库操作代码（表结构定义、DAO层、服务层） |\n| [CURD操作](../chapter4/section1.md) | 自动生成CURD API逻辑代码 |\n| 常量管理 | 统一管理业务常量，提升代码可维护性 |\n\n## 配套解决方案\n开提供开箱即用的管理系统模板，加速企业级应用开发：\n\n| 解决方案 | 亮点 |\n| --- | --- |\n| [Admin-Core](../chapter5/section1.md) | 内置RBAC权限体系，快速实现用户/角色/菜单管理 |\n| [Vue3管理模板](../chapter5/section4.md) | 基于流行技术栈（Vue3+Element Plus），提供完整后台功能组件, 同时支持代码前端页面代码生成 |\n\n## 实践案例\n- [admin-core-niuhe](https://github.com/ma-guo/admin-core-niuhe) 完整示例项目（后端）\n- [admin-core-test](https://github.com/ma-guo/admin-core-test) 前端框架接入示例 \n- [在线演示](http://admindemo.zuxing.net) Vue3管理后台演示（账号: admin / 123456）\n\n', '<p>Vscode <a href=\"https://marketplace.visualstudio.com/items?itemName=dequan.niuhe\" target=\"_blank\">niuhe(牛河/河粉)</a> 插件是一款面向 <code>golang</code> 的后端 IDL 代码生成(翻译)插件, 旨在简化前后端开发流程, 提高开发效率. 它通过简单的 <a href=\"../chapter2/section3.md\" target=\"_blank\">niuhe idl 语法</a> 定义接口, 支持生成对应的 go 服务代码, 前端 api 定义, swagger 文档, 以及其他语言的协议.</p>\n<p><a href=\"../chapter2/section3.md\" target=\"_blank\"><code>niuhe IDl</code></a> 是一种类似于 Python 的对象接口定义语言（Interface Definition Language, <code>IDL</code>），语法简洁，开发者易上手。</p>\n<p>插件借助对 <code>niuhe IDl</code> 的支持与拓展，开发者只需定义一次接口就能多处复用，避免前后端重复定义，接口更新也无需繁琐通知。此外，插件还能自动生成 <a href=\"../chapter4/section1.md\" target=\"_blank\">CURD 相关前后端代码</a>，并搭配<a href=\"../chapter5/README.md\" target=\"_blank\">管理后台模板</a>。</p>\n<p>niuhe 插件通过一套接口定义生成多套一致代码，可减少重复劳动，提升开发效率，提升项目的一致性和可维护性，让团队聚焦核心业务，非常适合中小开发团队使用。</p>\n<h2><a id=\"_8\"></a>核心功能</h2>\n<table>\n<thead>\n<tr>\n<th>功能模块</th>\n<th>核心能力</th>\n<th>适用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Go语言支持</td>\n<td>自动生成服务框架代码：包含路由管理<a href=\"https://github.com/ma-guo/niuhe\" target=\"_blank\">niuhe</a>、请求参数解析<a href=\"https://github.com/ma-guo/zpform\" target=\"_blank\">zpform</a>、响应格式处理等基础代码<a href=\"https://github.com/ma-guo/niuhe\" target=\"_blank\">niuhe</a>。<a href=\"https://github.com/ma-guo/niuhe\" target=\"_blank\">niuhe</a> 和 <a href=\"https://github.com/ma-guo/zpform\" target=\"_blank\">zpform</a> 两个库是本插件的基石</td>\n<td>后端开发</td>\n</tr>\n<tr>\n<td><a href=\"../chapter3/section3.md\" target=\"_blank\">TypeScript支持</a></td>\n<td>一键生成前端API调用代码，支持Web/小程序/React Native等场景</td>\n<td>前端开发</td>\n</tr>\n<tr>\n<td><a href=\"../chapter3/section2.md\" target=\"_blank\">文档生成</a></td>\n<td>自动生成Swagger文档，支持导入Postman/<a href=\"https://apifox.com/\" target=\"_blank\">Apifox</a>等测试工具, <a href=\"../chapter3/section4.md\" target=\"_blank\">接入 MCP</a> 等</td>\n<td>接口测试</td>\n</tr>\n<tr>\n<td><a href=\"../chapter4/section2.md\" target=\"_blank\">多语言协议</a></td>\n<td>生成标准化协议文件，支持自定义转换到其他编程语言</td>\n<td>前端开发</td>\n</tr>\n</tbody>\n</table>\n<h2><a id=\"Go_17\"></a>Go服务核心特性</h2>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>优势</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>智能路由</td>\n<td>自动根据文件结构生成路由配置，无需手动维护</td>\n</tr>\n<tr>\n<td>参数处理</td>\n<td>内置请求参数校验和响应格式化，专注业务逻辑开发</td>\n</tr>\n<tr>\n<td><a href=\"../chapter4/section1.md\" target=\"_blank\">XORM集成</a></td>\n<td>自动生成数据库操作代码（表结构定义、DAO层、服务层）</td>\n</tr>\n<tr>\n<td><a href=\"../chapter4/section1.md\" target=\"_blank\">CURD操作</a></td>\n<td>自动生成CURD API逻辑代码</td>\n</tr>\n<tr>\n<td>常量管理</td>\n<td>统一管理业务常量，提升代码可维护性</td>\n</tr>\n</tbody>\n</table>\n<h2><a id=\"_26\"></a>配套解决方案</h2>\n<p>开提供开箱即用的管理系统模板，加速企业级应用开发：</p>\n<table>\n<thead>\n<tr>\n<th>解决方案</th>\n<th>亮点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"../chapter5/section1.md\" target=\"_blank\">Admin-Core</a></td>\n<td>内置RBAC权限体系，快速实现用户/角色/菜单管理</td>\n</tr>\n<tr>\n<td><a href=\"../chapter5/section4.md\" target=\"_blank\">Vue3管理模板</a></td>\n<td>基于流行技术栈（Vue3+Element Plus），提供完整后台功能组件, 同时支持代码前端页面代码生成</td>\n</tr>\n</tbody>\n</table>\n<h2><a id=\"_34\"></a>实践案例</h2>\n<ul>\n<li><a href=\"https://github.com/ma-guo/admin-core-niuhe\" target=\"_blank\">admin-core-niuhe</a> 完整示例项目（后端）</li>\n<li><a href=\"https://github.com/ma-guo/admin-core-test\" target=\"_blank\">admin-core-test</a> 前端框架接入示例</li>\n<li><a href=\"http://admindemo.zuxing.net\" target=\"_blank\">在线演示</a> Vue3管理后台演示（账号: admin / 123456）</li>\n</ul>\n', '2025-08-27 11:25:02', '2025-08-27 14:45:22', NULL);",
		"INSERT INTO `sys_draft` (`id`, `doc_id`, `markdown`, `version`, `create_at`, `update_at`, `delete_at`, `name`) VALUES (1, 1, 'Vscode [niuhe(牛河/河粉)](https://marketplace.visualstudio.com/items?itemName=dequan.niuhe) 插件是一款面向 `golang` 的后端 IDL 代码生成(翻译)插件, 旨在简化前后端开发流程, 提高开发效率. 它通过简单的 [niuhe idl 语法](../chapter2/section3.md) 定义接口, 支持生成对应的 go 服务代码, 前端 api 定义, swagger 文档, 以及其他语言的协议.\n\n[`niuhe IDl`](../chapter2/section3.md) 是一种类似于 Python 的对象接口定义语言（Interface Definition Language, `IDL`），语法简洁，开发者易上手。\n\n插件借助对 `niuhe IDl` 的支持与拓展，开发者只需定义一次接口就能多处复用，避免前后端重复定义，接口更新也无需繁琐通知。此外，插件还能自动生成 [CURD 相关前后端代码](../chapter4/section1.md)，并搭配[管理后台模板](../chapter5/README.md)。\n\nniuhe 插件通过一套接口定义生成多套一致代码，可减少重复劳动，提升开发效率，提升项目的一致性和可维护性，让团队聚焦核心业务，非常适合中小开发团队使用。\n\n## 核心功能\n\n| 功能模块 | 核心能力 | 适用场景 |\n| --- | --- | --- |\n| Go语言支持 | 自动生成服务框架代码：包含路由管理[niuhe](https://github.com/ma-guo/niuhe)、请求参数解析[zpform](https://github.com/ma-guo/zpform)、响应格式处理等基础代码[niuhe](https://github.com/ma-guo/niuhe)。[niuhe](https://github.com/ma-guo/niuhe) 和 [zpform](https://github.com/ma-guo/zpform) 两个库是本插件的基石 | 后端开发 |\n| [TypeScript支持](../chapter3/section3.md) | 一键生成前端API调用代码，支持Web/小程序/React Native等场景 | 前端开发 |\n| [文档生成](../chapter3/section2.md) | 自动生成Swagger文档，支持导入Postman/[Apifox](https://apifox.com/)等测试工具, [接入 MCP](../chapter3/section4.md) 等 | 接口测试 |\n| [多语言协议](../chapter4/section2.md) | 生成标准化协议文件，支持自定义转换到其他编程语言 | 前端开发 |\n\n## Go服务核心特性\n| 功能 | 优势 |\n| --- | --- |\n| 智能路由 | 自动根据文件结构生成路由配置，无需手动维护 |\n| 参数处理 | 内置请求参数校验和响应格式化，专注业务逻辑开发 |\n| [XORM集成](../chapter4/section1.md) | 自动生成数据库操作代码（表结构定义、DAO层、服务层） |\n| [CURD操作](../chapter4/section1.md) | 自动生成CURD API逻辑代码 |\n| 常量管理 | 统一管理业务常量，提升代码可维护性 |\n\n## 配套解决方案\n开提供开箱即用的管理系统模板，加速企业级应用开发：\n\n| 解决方案 | 亮点 |\n| --- | --- |\n| [Admin-Core](../chapter5/section1.md) | 内置RBAC权限体系，快速实现用户/角色/菜单管理 |\n| [Vue3管理模板](../chapter5/section4.md) | 基于流行技术栈（Vue3+Element Plus），提供完整后台功能组件, 同时支持代码前端页面代码生成 |\n\n## 实践案例\n- [admin-core-niuhe](https://github.com/ma-guo/admin-core-niuhe) 完整示例项目（后端）\n- [admin-core-test](https://github.com/ma-guo/admin-core-test) 前端框架接入示例 \n- [在线演示](http://admindemo.zuxing.net) Vue3管理后台演示（账号: admin / 123456）\n\n', 1, '2025-08-27 11:25:02', '2025-08-27 11:25:02', NULL, NULL);",
		"INSERT INTO `sys_menu` (`id`, `parent_id`, `tree_path`, `name`, `type`, `path`, `component`, `perm`, `visible`, `sort`, `icon`, `redirect`, `create_time`, `update_time`, `always_show`, `keep_alive`) VALUES (114, 1, '0,1', '内容管理', 1, 'documents', 'system/docs/markdown', '', 1, 110, 'document', '', '2025-08-27 10:54:59', '2025-08-27 10:54:59', 0, 0);",
		"INSERT INTO `admincore`.`sys_role_menu` (`role_id`, `menu_id`) VALUES (2, 114);",
	}
	if MainDB == nil {
		return nil
	}
	dao := db.NewDB(MainDB)
	defer dao.Close()
	session := dao.GetDB()

	query := "select count(*) as count from sys_menu;"
	result, err := session.Query(query)
	if err != nil {
		niuhe.LogInfo("初始化数据库数据 %v", err)
		return err
	}
	if len(result) == 0 {
		return niuhe.NewCommError(-1, "初始化数据库数据失败")
	}
	count, err := strconv.ParseInt(string(result[0]["count"]), 10, 64)
	if err != nil {
		niuhe.LogInfo("初始化数据库数据 %v", err)
		return err
	}
	if count > 0 {
		// 已经存在数据, 不需要再次初始化
		return nil
	}
	for _, line := range lines {
		_, err := session.Exec(line)
		if err != nil {
			niuhe.LogInfo("批量插入数据失败 %v", err)
		}
	}
	return nil
}
